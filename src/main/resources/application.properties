spring.application.name=books-api
server.servlet.context-path=/books-api
#
yandex-disk.token=${YA_DISK_TOKEN}
yandex-disk.url=${YA_DISK_URL}
yandex-disk.dir=${YA_DISK_DIR}
#
server.error.include-exception=true
server.error.include-message=always
server.error.include-binding-errors=always
#
spring.datasource.url=jdbc:postgresql://${DB_IP}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.schema=public
spring.data.jdbc.dialect=postgresql
spring.datasource.driver-class-name=org.postgresql.Driver
#
spring.flyway.url=jdbc:postgresql://${DB_IP}:${DB_PORT}/${DB_NAME}?currentSchema=public
spring.flyway.user=${DB_USERNAME}
spring.flyway.password=${DB_PASSWORD}
spring.flyway.schemas=public
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
#
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=false
#
springdoc.swagger-ui.default-model-expand-depth=3
springdoc.swagger-ui.tags-sorter=alpha
#

# Hibernate properties
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect